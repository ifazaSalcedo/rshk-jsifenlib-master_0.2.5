plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group "com.roshka.sifen"
version "0.2.5"

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

sourceCompatibility = 17

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: "junit", name: "junit", version: "4.13.1"
    testImplementation "org.hamcrest:hamcrest:2.2"
    /* implementation group: 'jakarta.xml.soap', name: 'jakarta.xml.soap-api', version: '1.4.2'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.1'
     implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'*/
    implementation group: 'jakarta.xml.ws', name: 'jakarta.xml.ws-api', version: '3.0.1'
    implementation group: 'com.sun.xml.ws', name: 'jaxws-rt', version: '3.0.1'
}


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

javadoc {
    options.charSet = "UTF-8"
    options.encoding = "UTF-8"
}
wrapper {
    gradleVersion = '8.5'  // Reemplaza con la última versión de Gradle
}
/*publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "rshk-jsifenlib"
            from components.java

            pom {
                name = "RSHK jsifenlib"
                description = "Librería de código abierto, sin dependencias externas, para interactuar con SIFEN (Sistema Integrado de Facturación Electrónica Nacional)."
                url = "https://github.com/roshkadev/rshk-jsifenlib/"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/roshkadev/rshk-jsifenlib/blob/master/LICENCIA.md/"
                    }
                }
                developers {
                    developer {
                        id = "pablo"
                        name = "Pablo Santa Cruz"
                        email = "pablo@roshka.com"
                    }
                    developer {
                        id = "david-ayala"
                        name = "David Ayala"
                        email = "dayala@taxit.com.py"
                    }
                    developer {
                        id = "martinzarza"
                        name = "Martin Zarza"
                        email = "mzarza99@gmail.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/roshkadev/rshk-jsifenlib.git/"
                    developerConnection = "scm:git:ssh://github.com/roshkadev/rshk-jsifenlib.git/"
                    url = "https://github.com/roshkadev/rshk-jsifenlib/"
                }
            }
        }
    }

    repositories {
        maven {
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}*/

/*signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
    useInMemoryPgpKeys(System.getenv("GPG_KEY"), System.getenv("GPG_PASSWORD"))
    sign publishing.publications.mavenJava
}*/
